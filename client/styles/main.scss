@import 'libs/vars';
@import 'libs/functions';
@import 'libs/mixins';
@import 'libs/skel';
@import 'font-awesome.min.css';
@import url("https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,300i,400i");

/*
	Ethereal by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
*/

	@include skel-breakpoints((
		xlarge: '(max-width: 1680px)',
		large: '(max-width: 1280px)',
		medium: '(max-width: 980px)',
		small: '(max-width: 736px)',
		xsmall: '(max-width: 480px)',
		xxsmall: '(max-width: 360px)',
		short: '(min-aspect-ratio: 16/7)',
		xshort: '(min-aspect-ratio: 16/6)'
	));

	@include skel-layout((
		reset: 'full',
		boxModel: 'border'
	));

// Mixins.

	@mixin gradient-background($tint: false, $opacity: 0.25, $angle: 45deg, $stop1: 20%, $stop2: 60%, $stop3: 100%) {
		$background-image: (
			url('../images/overlay.png'),
			linear-gradient(
				$angle,
				transparentize(_palette(accent1), (1 - $opacity)) $stop1,
				transparentize(_palette(accent2), (1 - $opacity)) $stop2,
				transparentize(_palette(accent3), (1 - $opacity)) $stop3)
		);

		$background-size: (
			128px 128px,
			auto
		);

		@if ($tint) {
			$x: linear-gradient(0deg, rgba(0,0,0,0.125), rgba(0,0,0,0.125));
			$y: auto;
			$background-image: append($background-image, $x);
			$background-size: append($background-size, $y);
		}

		background-image: $background-image;
		background-size: $background-size;
	}

	@mixin gradient-background-small($tint: false, $opacity: 0.25, $stop1: 25%, $stop2: 50%, $stop3: 100%) {
		@include gradient-background($tint, $opacity, 135deg, $stop1, $stop2, $stop3);
	}

	@mixin spans($x) {
		@for $i from 0 through 10 {

				.span-1-#{$i} {
					width: ($x * $i) * 0.1;
				}

				.span-5-#{$i} {
					width: ($x * $i) * 0.5;
				}

				.span-25-#{$i} {
					width: ($x * $i) * 0.25;
				}

				.span-75-#{$i} {
					width: ($x * $i) * 0.75;
				}

				.span-85-#{$i} {
					width: ($x * $i) * 0.85;
				}

				.span-95-#{$i} {
					width: ($x * $i) * 0.95;
				}
		}
	}

	@mixin spans-small($x) {
		@for $i from 0 through 10 {

			@if ($i > 0) {
				.span-#{$i} {
					width: 100%;
				}
			}

			@if ($i < 10) {
				.span-#{$i}-25 {
					width: 100%;
				}

				.span-#{$i}-5 {
					width: 100%;
				}

				.span-#{$i}-75 {
					width: 100%;
				}
			}
		}
	}

// Base.

	@import 'base/page';
	@import 'base/typography';

// Component.

	@import 'components/form';
	@import 'components/icon';
	@import 'components/image';
	@import 'components/list';
	@import 'components/table';
	@import 'components/button';
	@import 'components/gallery';
	@import 'components/panel';
	@import 'components/panel-banner';
	@import 'components/panel-spotlight';
	@import 'components/iframe';
	@import 'components/canvas';

// Layout.

	@import 'layout/page-wrapper';
	@import 'layout/wrapper';

// Customs that override everything
    @import 'customs/index';
